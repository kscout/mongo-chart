apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.env }}-{{ .Values.app }}-mongo
  labels:
    app: {{ .Values.app }}
    component: mongo
    env: {{ .Values.env }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app }}
      component: mongo
      env: {{ .Values.env }}
  serviceName: {{ .Values.env }}-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        component: mongo
        env: {{ .Values.env }}
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.env }}-mongo-config
                  key: user
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.env }}-mongo-credentials
                  key: password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.env }}-mongo-config
                  key: dbName
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: {{ .Values.env }}-{{ .Values.app }}-mongo
              mountPath: /data/db
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.env }}-{{ .Values.app }}-mongo
      labels:
        app: {{ .Values.app }}
        component: mongo
        env: {{ .Values.env }}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
